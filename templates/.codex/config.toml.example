# Codex CLI 設定テンプレート
# このファイルをコピーして ~/.codex/config.toml として使用してください
#
# 使用方法:
#   cp templates/.codex/config.toml.example ~/.codex/config.toml
#
# 注意: このファイルは .gitignore に追加してバージョン管理対象外にしてください
#
# 参考: https://github.com/openai/codex/blob/main/docs/config.md

# === モデルプロバイダー設定 ===
[model_providers.openai]
name = "OpenAI"
base_url = "https://api.openai.com/v1"
wire_api = "responses"  # または "chat"
query_params = {}
http_headers = { version = "0.0.0" }
env_http_headers = { "OpenAI-Organization" = "OPENAI_ORGANIZATION", "OpenAI-Project" = "OPENAI_PROJECT" }
request_max_retries = 4
stream_max_retries = 5
stream_idle_timeout_ms = 300000
requires_openai_auth = true

# === デフォルトモデル設定 ===
# 使用するモデルを指定（例: "gpt-4", "gpt-4-turbo", "o3" など）
# model = "gpt-4-turbo"

# === MCP サーバー設定 ===
# Model Context Protocol サーバーの設定
# CLI と VSCode 拡張で共有されます

# Serena: コードベース解析・編集
[mcp_servers.serena]
command = "uv"
args = [
  "run",
  "--directory",
  "/opt/serena",
  "serena",
  "start-mcp-server",
  "--context",
  "ide-assistant",
  "--project",
  "/workspaces/YOUR_PROJECT_NAME"  # プロジェクトパスを変更してください
]

# Filesystem: ファイル操作
[mcp_servers.filesystem]
command = "npx"
args = [
  "-y",
  "@modelcontextprotocol/server-filesystem",
  "/workspaces/YOUR_PROJECT_NAME"  # プロジェクトパスを変更してください
]

# GitHub: GitHub API統合
[mcp_servers.github]
command = "uvx"
args = ["mcp-github"]

# Playwright: ブラウザ自動化
[mcp_servers.playwright]
command = "npx"
args = ["@playwright/mcp@latest"]

# Context7: ドキュメント検索
[mcp_servers.context7]
command = "npx"
args = ["-y", "@upstash/context7-mcp"]

# SSE (Server-Sent Events) トランスポート設定例
# [mcp_servers.remote_server]
# transport = "sse"
# url = "http://localhost:8080/sse"

# === プロファイル設定 ===
# 複数のプロファイルを定義して切り替え可能
# 使用方法: codex --profile development

# [profiles.development]
# model = "gpt-4"
# approval_policy = "prompt"

# [profiles.production]
# model = "gpt-4-turbo"
# approval_policy = "strict"

# === 言語設定 ===
# 日本語を基本言語として使用
language = "ja"

# === 承認ポリシー設定 ===
# 使用環境を緩和するため、基本的に自動承認
approval_policy = "auto"  # "prompt", "auto", "strict"

# === 使用環境緩和設定（デファクトスタンダード） ===

# ツール実行の自動承認（開発環境向け）
[tool_approval]
# 読み取り系のツールは自動承認
read_operations = "auto"
# 書き込み系のツールは確認（安全のため）
write_operations = "prompt"
# Git操作は自動承認（コミット・プッシュ以外）
git_operations = "auto"

# タイムアウト設定（長時間実行を許可）
[timeouts]
# コマンド実行のタイムアウト（ミリ秒）
command_timeout_ms = 300000  # 5分
# ストリームのタイムアウト（ミリ秒）
stream_timeout_ms = 600000  # 10分

# 出力制限の緩和
[output_limits]
# 最大出力サイズ（バイト）
max_output_bytes = 1048576  # 1MB
# 最大行数
max_output_lines = 10000

# コンテキストウィンドウ設定
[context]
# 最大トークン数
max_tokens = 128000
# 会話履歴の保持数
max_history = 100

# === サンドボックス設定 ===
# コンテナ環境では無効化（既にコンテナ内のため）
[sandbox]
enabled = false
# docker_image = "python:3.11"

# === カスタムプロンプト設定 ===
# システムプロンプトのカスタマイズ
[prompts]
# 日本語での応答を指示
system_prompt = """
あなたは日本語を主言語とするコーディングアシスタントです。

## 基本ルール
- すべての応答は日本語で行ってください
- コード内のコメントは日本語で記述してください
- 技術的な説明も日本語で行ってください
- 変数名・関数名は英語でも構いません

## コミュニケーション
- 丁寧語（です・ます調）を使用してください
- 不明点は必ず質問してください
- 段階的に説明し、理解を確認しながら進めてください
"""
